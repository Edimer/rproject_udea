my_wf <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(model_lasso)
my_recipe %>%
prep() %>%
bake(new_data = NULL)
GC()
gc()
model_lasso <- linear_reg(mode = "regression",
mixture = 1,
penalty = 0.1) %>%
set_engine("glmnet")
my_wf <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(model_lasso)
doParallel::registerDoParallel()
set.seed(2021)
lasso_resamples <- fit_resamples(
my_wf,
k_folds,
metrics = metric_set(rmse),
control = control_resamples(save_pred = TRUE)
)
rlang::last_error()
rlang::last_trace()
lasso_resamples
sum(is.na(train))
sum(is.nan(train))
lasso_resamples
pao <- my_recipe %>%
prep() %>%
bake(new_data = NULL)
sum(is.na(test))
is.nan(iris)
sum(is.na(train_inicial))
apply(train_inicial, 2, function(x){sum(is.nan(x))})
apply(pao, 2, function(x){sum(is.nan(x))})
apply(pao, 2, function(x){sum(is.infinite(x))})
lasso_resamples
parallel::detectCores()
set.seed(1992)
poblacion <- rnorm(n = 1000, mean = 4.5678, sd = 1.865)
medias <- c()
for(i in 1:length(poblacion)){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
mean(medias)
library(tidyverse)
enframe(medias)
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density()
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red")
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:length(poblacion)){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:50){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:200){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:2000){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 100))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 1000))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 1000))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 100))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 500))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 800))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
set.seed(123)
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:200){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:2000){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20000){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20000){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
mean(medias)
sd(medias)
mean(medias)
media1 <-mean(medias)
sd1 <- sd(medias)
sum(poblacion > media1-sd1 & poblacion < media1+sd1)
sum(poblacion > media1-sd1 & poblacion < media1+sd1) / 1000
sum(poblacion > media1-1.865 & poblacion < media1+1.865) / 1000
install.packages("nortest")
poblacion <- rnorm(100)
shapiro.test(poblacion)
poblacion <- rnorm(100)
shapiro.test(poblacion)
poblacion <- rnorm(100)
shapiro.test(poblacion)
library(nortest)
ad.test(poblacion)
cvm.test(poblacion)
lillie.test(poblacion)
pearson.test(poblacion)
sf.test(poblacion)
set.seed(123)
poblacion <- rnorm(1000, 45.2, 12.1)
library(tidyverse)
library(broom)
tibble(muestra_num = 1:100) %>%
mutate(muestra = map(.x = muestra_num, .f = ~sample(
x = poblacion,
size = 100,
replace = TRUE
)))
prueba <- tibble(muestra_num = 1:100) %>%
mutate(muestra = map(.x = muestra_num, .f = ~sample(
x = poblacion,
size = 100,
replace = TRUE
)))
prueba$muestra[1]
prueba$muestra[[1]]
prueba$muestra[[1]]
prueba$muestra[1] %>% mean()
prueba$muestra[[1]] %>% mean()
prueba <- tibble(muestra_num = 1:100) %>%
mutate(muestra = map(.x = muestra_num, .f = ~sample(
x = poblacion,
size = 100,
replace = TRUE
)),
estimado = map(
.x = muestra,
.f = ~t.test(
x = .x,
mu = 45.2,
alternative = "two.sided",
conf.level = 0.95
)
))
prueba
prueba$estimado[1]
prueba$estimado[1] %>% tidy()
prueba$estimado[[1]] %>% tidy()
prueba <- tibble(muestra_num = 1:100) %>%
mutate(muestra = map(.x = muestra_num, .f = ~sample(
x = poblacion,
size = 100,
replace = TRUE
)),
estimado = map(
.x = muestra,
.f = ~t.test(
x = .x,
mu = 45.2,
alternative = "two.sided",
conf.level = 0.95
)
),
estimado_tidy = map(.x = estimado, .f = tidy))
prueba
prueba_final <- prueba %>%
unnest(estimado_tidy)
prueba_final
rm(ls = list())
rm(list = ls())
?t.test()
choose(7, 5)
choose(7, 8)
choose(8, 7)
log(0)
log(1)
log1p(0)
prop.test(x = c(11, 19), n = c(30, 30))
prop.test(x = 11, n = 30, p = 0.5)
prop.test(x = 11, n = 30, p = 0.63)
prop.test(x = c(11, 19), n = c(30, 30))
df <- data.frame(runif(3), runif(3))
names(df) <- c(1, 2)
df
df$`3` <- df$`1` + df$`2`
df
# 2.
x <- runif(1e6)
y <- list(x, x, x)
object.size(y)
object.size(y) / 1000
object.size(y)
24000224 / 1048576
object.size(y) / 1048576
obj_size(y)
object.size(y)
install.packages("lobstr")
lobstr::obj_size(y)
object.size(y)
library(lobstr)
obj_size(y)
memory.limit()
# 3. 2da línea
a <- 1:10
b <- a
c <- b
obj_addr(a, b, c)
# 3. 2da línea
a <- 1:10
b <- a
c <- b
obj_addr(a, b, c)
# 3. 2da línea
a <- 1:10
b <- a
c <- b
obj_addr(a, b, c)
obj_addr(a, b)
obj_addr(a)
obj_addr(list(a, b))
línea
a <- 1:10
b <- a
c <- b
obj_addr(a)
obj_addr(b)
obj_addr(c)
d <- 1:10
obj_addr(d)
8000128 / 1048576
obj_size(y)
a <- c(1, 2, 3)
b <- factor(c(1, 2, 3))
obj_size(a)
obj_size(b)
table(a)
table(b)
parallel::detectCores()
library(tidyverse)
str_c("paola", ".")
(0.172^2) + (0.291^2) + (0.427^2) + (0.221^2) + (0.244^2)
(0.172) + (0.291) + (0.427) + (0.221) + (0.244)
library(tidyverse)
data.frame(str_c("Modelo", 18:34))
data.frame(str_c("Modelo", 18:34)) %>% view()
?mgcv::gam()
2.706^2 +  2.340^2 +  1.492^2
0.018^2 +  0.443^2 +  (-0.601)^2
(0.018)^2 +  (0.443)^2 +  (-0.601)^2
(0.018)^2 +  (0.443)^2 +  (0.601)^2
(0.018)  (0.443)  (0.601)
(0.018) + (0.443)  +(0.601)
((0.018) + (0.443)  +(0.601))^2
((0.018) + (0.443)  +(-0.601))^2
0.05^2
0.95^2
0.95^1
1 - (1-0.05)^2
1 - (1-0.05)^1
1 - (1 - 0.05)^1
1 - (1 - 0.05)^2
1 - (1 - 0.05)^20
1 - (1 - 0.05)^1
1 - (1 - 0.05)^50
choose(n = 6, k = 2)
1 - (1 - 0.05)^15
setwd("~/Documentos/Github/rproject_udea/temas")
