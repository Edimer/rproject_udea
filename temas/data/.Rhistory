geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:length(poblacion)){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:50){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:200){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:2000){
medias[i] <- mean(sample(x = poblacion, size = 10))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 100))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 1000))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 1000))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 100))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 500))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 800))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
set.seed(123)
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:200){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:2000){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20000){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20000){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
medias <- c()
for(i in 1:20){
medias[i] <- mean(sample(x = poblacion, size = 30))
}
x11();
library(tidyverse)
enframe(medias) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_vline(xintercept = 4.5678, color = "red") +
geom_vline(xintercept = mean(medias), color = "blue", lty = 2)
mean(medias)
sd(medias)
mean(medias)
media1 <-mean(medias)
sd1 <- sd(medias)
sum(poblacion > media1-sd1 & poblacion < media1+sd1)
sum(poblacion > media1-sd1 & poblacion < media1+sd1) / 1000
sum(poblacion > media1-1.865 & poblacion < media1+1.865) / 1000
install.packages("nortest")
poblacion <- rnorm(100)
shapiro.test(poblacion)
poblacion <- rnorm(100)
shapiro.test(poblacion)
poblacion <- rnorm(100)
shapiro.test(poblacion)
library(nortest)
ad.test(poblacion)
cvm.test(poblacion)
lillie.test(poblacion)
pearson.test(poblacion)
sf.test(poblacion)
set.seed(123)
poblacion <- rnorm(1000, 45.2, 12.1)
library(tidyverse)
library(broom)
tibble(muestra_num = 1:100) %>%
mutate(muestra = map(.x = muestra_num, .f = ~sample(
x = poblacion,
size = 100,
replace = TRUE
)))
prueba <- tibble(muestra_num = 1:100) %>%
mutate(muestra = map(.x = muestra_num, .f = ~sample(
x = poblacion,
size = 100,
replace = TRUE
)))
prueba$muestra[1]
prueba$muestra[[1]]
prueba$muestra[[1]]
prueba$muestra[1] %>% mean()
prueba$muestra[[1]] %>% mean()
prueba <- tibble(muestra_num = 1:100) %>%
mutate(muestra = map(.x = muestra_num, .f = ~sample(
x = poblacion,
size = 100,
replace = TRUE
)),
estimado = map(
.x = muestra,
.f = ~t.test(
x = .x,
mu = 45.2,
alternative = "two.sided",
conf.level = 0.95
)
))
prueba
prueba$estimado[1]
prueba$estimado[1] %>% tidy()
prueba$estimado[[1]] %>% tidy()
prueba <- tibble(muestra_num = 1:100) %>%
mutate(muestra = map(.x = muestra_num, .f = ~sample(
x = poblacion,
size = 100,
replace = TRUE
)),
estimado = map(
.x = muestra,
.f = ~t.test(
x = .x,
mu = 45.2,
alternative = "two.sided",
conf.level = 0.95
)
),
estimado_tidy = map(.x = estimado, .f = tidy))
prueba
prueba_final <- prueba %>%
unnest(estimado_tidy)
prueba_final
rm(ls = list())
rm(list = ls())
?t.test()
choose(7, 5)
choose(7, 8)
choose(8, 7)
log(0)
log(1)
log1p(0)
setwd("~/Documentos/Clases_2021/curso_estadistica")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(readxl)
library(tidyverse)
datos <- read_excel("encuesta_depurada.xlsx")
datos
x_barra <- mean(datos$promedio_academico)
mu_referencia <- 3.5
desviacion_muestral <- sd(datos$promedio_academico)
raiz_n <- sqrt(nrow(datos))
(x_barra - mu_referencia) / (desviacion_muestral / raiz_n)
qt(p = 0.025, df = 29, lower.tail = TRUE)
qt(p = 0.025, df = 29, lower.tail = FALSE)
x_barra <- mean(datos$promedio_academico)
mu_referencia <- 3.5
desviacion_muestral <- sd(datos$promedio_academico)
raiz_n <- sqrt(nrow(datos))
x_barra <- mean(datos$promedio_academico)
mu_referencia <- 3.5
desviacion_muestral <- sd(datos$promedio_academico)
raiz_n <- sqrt(nrow(datos))
x_barra <- mean(datos$promedio_academico)
mu_referencia <- 3.5
desviacion_muestral <- sd(datos$promedio_academico)
raiz_n <- sqrt(nrow(datos))
(x_barra - mu_referencia) / (desviacion_muestral / raiz_n)
qt(p = 0.025, df = 29, lower.tail = TRUE)
qt(p = 0.025, df = 29, lower.tail = FALSE)
x_barra
x_barra - (2.045 * (desviacion_muestral / raiz_n))
x_barra + (2.045 * (desviacion_muestral / raiz_n))
x_barra + (2.045 * (desviacion_muestral / raiz_n))
pt(q = 4.371917, df = 29, lower.tail = TRUE)
pt(q = -4.371917, df = 29, lower.tail = TRUE)
pt(q = -4.371917, df = 29, lower.tail = TRUE)
pt(q = -4.371917, df = 29, lower.tail = TRUE)
pt(q = 4.371917, df = 29, lower.tail = FALSE)
7.228808e-05 + 7.228808e-05
t.test(x = datos$promedio_academico,
alternative = "two.sided",
conf.level = 0.95,
mu = 3.5)
t.test(x = datos$promedio_academico,
alternative = "two.sided",
conf.level = 0.95,
mu = 3.5)
t.test(x = datos$promedio_academico,
alternative = "two.sided",
conf.level = 0.95,
mu = 3.5)
t.test(x = datos$promedio_academico,
alternative = "two.sided",
conf.level = 0.95,
mu = 3.5)
prueba_t1 <- t.test(x = datos$promedio_academico,
alternative = "two.sided",
conf.level = 0.95,
mu = 3.5)
prueba_t1 <- t.test(
x = datos$promedio_academico,
alternative = "two.sided",
conf.level = 0.95,
mu = 3.5
)
library(broom)
t.test(x = datos$promedio_academico,
alternative = "two.sided",
conf.level = 0.95,
mu = 3.5)
library(broom)
prueba_t1 %>% tidy()
prueba_t1 %>% tidy()
table(datos$trabajo)
prop.table(table(datos$trabajo))
prop.table(table(datos$trabajo))[[2]]
table(datos$trabajo)
prop.test(
x = 11,
n = 30,
p = 0.5,
alternative = "two.sided",
conf.level = 0.95
)
install.packages(c("agridat", "agricolae"))
libra
library(agridat)
data()
dasilva.maize
dasilva.maize  %>% nrow()
library(tidyverse)
dasilva.maize
dasilva.maize  %>% nrow()
dasilva.maize  %>% view()
connolly.potato
davidian.soybean
devries.pine
devries.pine
fisher.barley
fisher.barley
library(ggpubr)
ggqqplot(fisher.barley$year)
ggqqplot(fisher.barley$yield)
ggqqplot(fisher.barley$yield[fisher.barley$year == 1932])
ggqqplot()
fisher.barley$yield[fisher.barley$year == 1932]
fisher.barley$yield[fisher.barley$year == 1931]
fisher.barley$yield[fisher.barley$year == 1930]
ggqqplot(fisher.barley$yield[fisher.barley$year == 1932])
ggqqplot(fisher.barley$yield[fisher.barley$year == 1931])
?fisher.barley
setwd("~/Documentos/Github/rproject_udea/temas/data")
writexl::write_xlsx(fisher.barley, path = "datos_cebada.xlsx")
edimer = readxl::read_excel("datos_cebada.xlsx")
edimer
edimer %>% map(year, .f = ggqqplot(.x$yield))
edimer %>% map(.x, .f = ggqqplot(.x$yield))
edimer %>% map(x, .f = ggqqplot(.x$yield))
besag.beans
blackman.wheat
?blackman.wheat
writexl::write_xlsx(blackman.wheat, path = "datos_trigo.xlsx")
?fisher.barley
var.test(fisher.barley$yield ~ fisher.barley$year)
filtro1 <- fisher.barley %>% filter(year = 1931)
filtro1 <- fisher.barley %>% filter(Year = 1931)
fisher.barley %>% as.data.frame() %>% filter(Year = 1931)
fisher.barley %>% as.data.frame()
fisher.barley %>% as.data.frame() %>% filter(Year = 1931)
fisher.barley %>% as.data.frame() %>% dplyr::filter(Year = 1931)
fisher.barley %>% as.data.frame()
fisher.barley %>% as.data.frame()
fisher.barley %>% as.data.frame()  %>% str()
fisher.barley %>% as.data.frame() %>% filter(Year = 1931)
fisher.barley %>% as.data.frame() %>% filter(year == 1931)
fisher.barley %>% as.data.frame() %>% filter(year == 1931) ->a
fisher.barley %>% as.data.frame() %>% filter(year == 1932) ->b
var.test(x = a, y = b, mu = 1)
var.test(x = a$yield, y = b$yield, mu = 1)
var.test(x = a$yield, y = b$yield, mu = 1)
var.test(fisher.barley$yield ~ fisher.barley$year)
var(a$yield) / var(b$yield)
bartlett.test(fisher.barley$yield ~ fisher.barley$year)
car::leveneTest(fisher.barley$yield ~ fisher.barley$year)
car::leveneTest(fisher.barley$yield ~ as.factor(fisher.barley$year))
prop.test(x = c(14, 15), n = c(10, 20))
prop.test(x = c(14, 15), n = c(31, 28))
prop.test(x = c(14, 15), n = c(31, 28), p = 0)
prop.test(x = c(14, 15), n = c(31, 28), p = c(0.5, 0.5))
prop.test(x = c(14, 15), n = c(31, 28), p = c(0, 0))
prop.test(x = c(14, 15), n = c(31, 28), p = c(0, 1))
prop.test(x = c(14, 15), n = c(31, 28), p = c(0.2, 0.9))
prop.test(x = c(14, 15), n = c(31, 28), p = c(0.2, 0.2))
prop.test(x = c(14, 15), n = c(31, 28))
?prop.test
prop.test(x = c(14, 15), n = c(31, 28))
prop.test(x = c(14, 15), n = c(31, 28))
