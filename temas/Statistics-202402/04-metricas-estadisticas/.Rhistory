2+2
2+2
20 + 50
2+2
20 + 50
20 + 50
2+2
20 + 50
2+2
20 + 50
20 + 50
2+20
2+2
20 + 50
2+2
20 + 50
30+40
20+10
plot(iris)
plot(mtcars)
plot(mtcars)
plot(iris)
plot(mtcars)
getwd()
getwd()
getwd()
exp(1)
log(20, base = 10)
10 ^ 1.30103
pi
pi
plot(sin(c(1:10)))
plot(sin(c(1:10)))
plot(sin(c(1:10)), type = "l")
plot(sin(c(1:1000)), type = "l")
plot(sin(c(1:100)), type = "l")
plot(cos(c(1:100)), type = "l")
plot(sin(c(1:100)), type = "l")
plot(iris)
mean("A")
knitr::opts_chunk$set(echo = TRUE)
mean("A")
rnorm(n = 30, mean = 25.8, sd = 4.3)
as.character(rnorm(n = 30, mean = 25.8, sd = 4.3))
as.character(round(rnorm(n = 30, mean = 25.8, sd = 4.3), digits = 2))
gsub(".", ",", as.character(round(rnorm(n = 30, mean = 25.8, sd = 4.3), digits = 2)))
data())
data()
trees
women
sleep
npk
?npk
ChickWeight
head(chickwts)
chickwts
rock
stack.loss
trees
women
sleep
Loblolly
ChickWeight
?ChickWeight
coplot(weight ~ Time | Chick, data = ChickWeight,
type = "b", show.given = FALSE)
chickwts
women
women$height
sort(women$height)
ordenados <- sort(women$height)
length(ordenados)
ordenados
n <- length(ordenados)
n
p43 <- (43 * (n + 1)) / 100
p43
ordenados[7]
women$weight
women$height
women$weight * 500
(women$weight * 500) / 1000
women$height[7]
quantile(women$height, probs = 0.43)
quantile(women$height, probs = 0.43, type = 1)
p43 <- (78 * (n + 1)) / 100
p43
ordenados[13]
ordenados[12]
quantile(women$height, probs = 0.78, type = 1)
quantile(women$height, probs = 0.78)
women$weight * 453.59
(women$weight * 453.59) / 1000
women$height
sort(women$height)
median(women$height)
quantile(women$height, probs = 0.5)
p50 <- (50 * (n + 1)) / 100
p50 <- (50 * (15 + 1)) / 100
p50
t(sort(women$height))
t(sort(women$height))
p50 <- (2 * (15 + 1)) / 4
p50
p50 <- (5 * (15 + 1)) / 10
p50
p50 <- (72 * (15 + 1)) / 100
p50
quantile(women$weight, probs = 0.72)
quantile(women$height, probs = 0.72)
quantile(women$height, probs = 0.72, type = 1)
p50 <- (73 * (15 + 1)) / 100
p50
quantile(women$height, probs = 0.73)
quantile(women$height, probs = 0.73, type = 1)
p50 <- (74 * (15 + 1)) / 100
p50
quantile(women$height, probs = 0.74, type = 1)
women$height
media = mean(women$height)
media
(women$height - media)^2
((women$height - media)^2) / 15
sum((women$height - media)^2)
sum((women$height - media)^2) / 15
mean((women$height - media)^2)
var(women$height)
sum((women$height - media)^2) / 14
women$weight
media = mean(women$weight)
media
women$weight - media
resta = women$weight - media
resta^2
resta_cuadrada = resta^2
resta_cuadrada
sum(resta_cuadrada)
suma_total = sum(resta_cuadrada)
suma_total / 15
suma_total / 14
var(women$weight)
media = mean(women$height)
resta3 = (women$height - media)^3
des3 <- sd(women$height)^3
numerador = mean(resta3)
numerador / des3
numerador
resta3
resta3
women$weight
num = mean((women$weight - mean(women$weight))^3)
num
resta3 = women$weight - mean(women$weight)
resta3
resta3 = (women$weight - mean(women$weight))^3
resta3
sum(resta3) / 15
num / sd(women$weight)
num / sd(women$weight)^3
moments::skewness(women$weight)
?moments::skewness()
15 / (14 * 13)
num = mean((women$weight - mean(women$weight))^3)
num
num / sd(women$weight)^3
moments::skewness(women$weight)
(15 / (14 * 13)) * (num / sd(women$weight)^3)
sort(women$height)
(50 * 16) / 100
median(women$height)
IQR(women$height)
quantile(women$height)
68.5 - 61.5
quantile(women$height, type = 1)
sort(women$height)
library(dplyr)
?select_if
iris %>% select(across(is.numeric))
iris %>% select(c_across(is.numeric))
iris %>% select(is.numeric)
iris %>% select(is.numeric) %>% head()
iris %>% select(is.numeric)
iris %>% select(is.numeric)
iris %>% select(where(is.numeric))
iris %>% select(where(is.numeric))
where(is.numeric(iris))
iris %>% select(where(is.numeric))
iris %>% select(where(is.numeric), Species)
iris %>% select(is.numeric, Species)
glimpse(mtcars)
Titanic
glimpse(Titanic)
as.data.frame(Titanic)
prueba <- as.data.frame(Titanic)
prueba
glimpse(prueba)
prueba %>% select(is.numeric, Sex)
a = c(2, 1)
b = c(1, 3, 5)
a + b
ceiling(2.9)
ceiling(2.1)
floor(2.1)
floor(2.9)
seq(from = 1, to = 10, by = 1)
seq(from = 1, to = 10, by = 5)
seq(from = 1, to = 11, by = 5)
seq(from = 1, to = 11, by = 3)
seq(from = 1, to = 11, length.out = 5)
seq(from = 1, to = 11, length.out = 50)
rep(1, 10)
rep(c(1, 2, 3), 10)
rep(c(1, 2, 3), 2)
rep(c(1, 2, 3), each = 5)
rep(c(1, 2, 3), length.out = 5)
rep(c(1, 2, 3), length.out = 9)
typeof(iris)
cbind(c(1, 2, 3), c("a", "b", "c"))
log(300)
log10(300)
install.packages("fpp3")
library(fpp3)
(2850 * 100) / 1.45
((2850) / 1.45) * 100
((2850) / 1.45)
2.8 / 1.4
exp(0)
setwd("D:/DocumentosEdimer/Github/rproject_udea/temas/Statistics/03-Estad-Descriptiva-R")
