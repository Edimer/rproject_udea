.footnote[
[1] [Página web flexdashboard.](https://rmarkdown.rstudio.com/flexdashboard/)
]
ls()
getwd()
sessionInfo()
a = 2
class(a)
str(a)
?install.packages()
typeof(a)
d = c(2, 3,)
d = c(2, 3)
typeof(d)
a = c("2")
class(a)
typeof(a)
a = 1
b = 2.2
class(a)
class(b)
typeof(b)
typeof(a)
a = matrix(data = c(2, 3, 4, 5), nrow = 2, ncol = 2)
a
a = matrix(data = c(2, 3, 4, 5), nrow = 2, ncol = 3)
a
a = matrix(data = c(2, 3, 4, 5), nrow = 2, ncol = 3)
a = matrix(data = c(2, 3, 4, 5), nrow = 2)
a
a = matrix(data = c(2, 3, 4, 5), nrow = 2, byrow = TRUE)
a
a = matrix(data = c(2, 3, 4, 5), nrow = 2, byrow = FALSE)
a
matrix(data = c(2, 3, 4, 5), nrow = 2, byrow = FALSE)
matrix(data = c(2, 3, 4, 5), nrow = 2, byrow = FALSE)
matrix(data = c(2, 3, 4, 5), nrow = 2, byrow = TRUE)
d = vector(mode = "character", length = 5)
d
d[1] <- 2
d
body(mean)
environment("getwd")
environment(getwd())
environment(getwd)
environment(mean)
environment(lm)
environment(plot)
environment(sd)
environment(iris)
environment("iris")
environmentName(mean)
environmentName("mean")
environmentName("mean")
?Comparison
?Arithmetic
?logical
?base::Logic
isTRUE(FALSE)
isTRUE(TRUE)
?inf
?base::Logic
sum(TRUE, TRUE)
sum(TRUE, TRUE, TRUE)
sum(TRUE, TRUE, TRUE, FALSE)
c(edimer = 1, edimer = 2, edimer = 3)
c(edimer = 1, edimer = 2, edimer = 3) ->a
a
a["edimer"]
c(edimer = 1, edimer2 = 2, edimer3 = 3) ->a
a["edimer1"]
a["edimer2"]
a["edimer"]
a["edimer3"]
a[1]
nrow(available.packages())
a
attributes(a)
traceback()
asodhfasd
traceback()
?base::Logic
perro <- c(1, 2, 3)
gato <- 2
gato > perro
gato <- c(2, 3, 5)
gato & perro >= 3
rm(a)
subset(c(2, 3, 5), subset = > 5)
?subset
subset(c(2, 3, 5), > 2)
subset(c(2, 3, 5) > 5)
subset(c(2, 3, 5))
gato = c(1, 20 14, 22)
gato = c(1, 20 14, 22)
poasjfapsdja
gato = c(1, 20, 14, 22)
subset(x = gato, gato > 80)
subset(x = gato, gato > 8)
perro <- c(e = 1, e = 2)
perro
perro(["e"])
perro["ed"]
perro["e"]
perro
gato <- c(1, 20 , 30, 5)
gato[gato > 10]
length(gato[gato > 10])
length(gato[gato > 10])/length(gato)
length(gato[gato > 10])/length(gato)*100
factorial(4)
factorial(4) / (factorial(2) * factorial((4 - 2)))
library(tidyverse)
rnorm(n = 100, mean = 4, sd = 1.1)
rnorm(n = 100, mean = 4, sd = 1.1) -> a
a
enframe(a)
combn(1, 3)
combn(c(1, 2), "a")
combn(c(1, 2), 2)
combn(c(1, 2), 3)
combn(c(1, 2, 3), 2)
combine(c("p1", "p2", "p3", "p4"), c("g1", "g2"))
# Simulación moneda
moneda <- c("cara", "sello")
exp1 <- c()
for (i in 1:500) {
muestra = replicate(sample(moneda, size = 1), n = i)
exp1[i] = prop.table(table(muestra))[1]
}
x11()
plot(exp1, type = "l", xlab = "Lanzamientos", ylab = "Probabilidad")
abline(h = 0.5, col = "red")
# Simulación moneda
moneda <- c("cara", "sello")
exp1 <- c()
for (i in 1:10) {
muestra = replicate(sample(moneda, size = 1), n = i)
exp1[i] = prop.table(table(muestra))[1]
}
x11()
plot(exp1, type = "l", xlab = "Lanzamientos", ylab = "Probabilidad")
abline(h = 0.5, col = "red")
choose(4, 2)
?choose
lchoose(4, 2)
knitr::include_graphics("img/experimento.png")
library(readxl)
library(tidyverse)
datos <- read_excel("data/encuesta_depurada.xlsx")
datos
theme_set(theme_minimal())
datos
datos %>%
mutate(lectura = fct_relevel(lectura, "Nada", "Muy poco",
"Frecuentemente")) %>%
ggplot(aes(x = lectura)) +
geom_bar()
datos %>%
mutate(lectura = fct_relevel(lectura, "Nada", "Muy poco",
"Frecuentemente")) %>%
ggplot(aes(x = lectura)) +
geom_bar() +
labs(x = "Hábito de lectura", y = "Frecuencia")
datos %>%
mutate(lectura = fct_relevel(lectura, "Nada", "Muy poco",
"Frecuentemente")) %>%
ggplot(aes(x = lectura)) +
geom_bar(color = "black") +
labs(x = "Hábito de lectura", y = "Frecuencia")
datos
datos %>%
ggplot(aes(x = promedio_academico)) +
geom_histogram(bins = 6)
datos %>%
ggplot(aes(x = horas_estudiar)) +
geom_histogram(bins = 6)
datos %>%
ggplot(aes(x = horas_estudiar)) +
geom_histogram(bins = 6, color = "black")
datos %>%
ggplot(aes(x = horas_estudiar)) +
geom_histogram(bins = 6, color = "black") +
labs(x = "Horas dedicadas a estudiar", y = "Frecuencia")
factorial(4)
factorial(2) * factorial(2)
24 / 4
6 / 16
choose(5, 3)
choose(7, 3)
10 / 35
choose(7, 5)
10 / 21
choose(5, 2)
choose(7, 5)
10 / 21
choose(7, 3)
10 7 35
10 / 35
choose(7, 5)
choose(7, 3)
21 / 31
choose(5, 3)
choose(7, 3)
10 7 35
10 / 35
2 / 7
choose(5, 3)
choose(7, 3)
10 / 35
choose(7, 2)
2 * 2 * 2 * 2 * 2 * 2 * 2
choose(8, 3)
choose(8, 4)
choose(8, 3)
choose(4, 3)
4 / 56
56/2
choose(4, 3)
choose(8, 3)
1 / 14
2 / 28
4 / 56
choose(7, 2)
21 / 128
21 / 3
128 / 3
128 / 4
21 / 4
21 / 128
choose(7, 4)
choose(5, 4)
5 / 35
choose(5, 3)
2^5
10 / 32
choose(15, 9)
choose(6, 3)
choose(9, 2)
(20 * 36) / 5005
choose(15, 5)
(20 * 36) / 3003
(choose(6, 3) * choose(9, 2)) / choose(15, 5)
20 * 36
720 / 3003
gtools::combinations(7, 4)
gtools::combinations(7, 4, v = c("niña", "niño"))
gtools::combinations(7, 4, v = c("n1", "n2", "n3", "n4", "n5", "n6", "n7"))
gtools::combinations(7, 4, v = c("n1", "n2", "n3", "n4", "n5", "n6", "n7"))
gtools::combinations(7, 2, v = c("n1", "n2", "n3", "n4", "n5", "n6", "n7"))
gtools::combinations(7, 2, v = c("n1", "n2"))
gtools::combinations(7, 2, v = c("cara", "cara", "cara", "cara", "cara", "sello", "sello"))
gtools::combinations(7, 2, v = c("cara", "cara", "cara", "cara", "cara", "sello", "sello"))
gtools::combinations(7, 2, v = c("cara", "cara", "cara", "cara", "cara", "sello", "sello", "cara"))
gtools::combinations(7, 2, v = c(rep("cara", 7)))
gtools::combinations(7, 2, v = c("n1", "n2", "n3", "n4", "n5", "n6", "n7"))
gtools::combinations(7, 2, v = c("cara", "cara", "cara", "cara", "cara", "sello", "sello"))
gtools::combinations(7, 2, v = c("cara1", "cara2", "cara3", "cara4", "cara5", "sello1", "sello2"))
gtools::permutations(7, 2, v = c("cara1", "cara2", "cara3", "cara4", "cara5", "sello1", "sello2"))
library(tidyverse)
gtools::permutations(7, 2, v = c("cara1", "cara2", "cara3", "cara4", "cara5", "sello1", "sello2")) %>% as_tibble()
gtools::permutations(7, 2, v = c("cara1", "cara2", "cara3", "cara4", "cara5", "sello1", "sello2")) %>% as_tibble() %>% filter(v1 == "sello1" | v2 == "sello1")
gtools::permutations(7, 2, v = c("cara1", "cara2", "cara3", "cara4", "cara5", "sello1", "sello2")) %>% as_tibble()
gtools::permutations(7, 2, v = c("cara1", "cara2", "cara3", "cara4", "cara5", "sello1", "sello2")) %>% as_tibble()
gtools::permutations(7, 2, v = c("cara1", "cara2", "cara3", "cara4", "cara5", "sello1", "sello2"))
514 + 68 + 112 + 246
112+ 246
68+246
358-246
314-246
112 / 940
358 / 940
(358 + 314) - 246
112 + 246 + 68
940 - 426
314 / 940
246 / 940
426 / 940
112 / 940
table(datos$redsocial_favorita, datos$lectura)
table(datos$trabajo, datos$lectura)
table(datos$trabajo, datos$bachiller_universidad)
table(datos$trabajo, datos$lectura)
table(datos$trabajo, datos$lectura)
0.6915 - 0.3085
x <- seq(-4, 4, length = 200)
y <- dnorm(x)
plot(x,y,type = "l", lwd = 2, col = "red")
x <- seq(-4, 1, length = 200)
y <- dnorm(x)
polygon(c(-4, x, 1), c(0, y, 0), col = "gray")
mu<-c(0,2,4,-5);
curve(dnorm(x),xlim=c(-10,10),main=expression('Distribución Normal '*sigma==1),lwd=2,
ylab='Densidad')
curve(dnorm(x,2,1),col=2,lwd=2,add=T)
curve(dnorm(x,4,1),col=3,lwd=2,add=T)
curve(dnorm(x,-5,1),col=4,lwd=2,add=T)
for(i in 1:4){polygon(c(mu[i],mu[i]),c(0,dnorm(mu[i],mu[i],1)),border=i,lty=4,lwd=2)}
legend('toprigh',lty=1,col=1:4,lwd=2,legend=c(expression(mu==0),expression(mu==2),
expression(mu==4),expression(mu==-5)), bty = "n")
sig<-c(1,0.7,2);sig<-cbind(-sig,sig)
curve(dnorm(x),lwd=2,ylim=c(0,0.6),xlim = c(-5,5),ylab='Densidad',
main=expression('Distribución Normal '*mu==0))
curve(dnorm(x,0,sig[2,2]),col=2,lwd=2,add=T)
curve(dnorm(x,0,sig[3,2]),col=3,lwd=2,add=T)
for(i in 1:3){polygon(sig[i,],dnorm(sig[i,],0,sig[i,2]),border = i,lty=4,lwd=2)}
legend('toprigh',lty=1,col=1:3,lwd=2,legend=c(expression(sigma==1),expression(sigma==0.7),
expression(sigma==2)), bty = "n")
choose(10, 7)
choose(10, 7) * 0.25^7 * (1-0.25)^3
choose(10, 0) * 0.25^7 * (1-0.25)^3
(choose(10, 0) * 0.25^7 * (1-0.25)^3) + (choose(10, 1) * 0.25^7 * (1-0.25)^3) + (choose(10, 2) * 0.25^7 * (1-0.25)^3)
(choose(10, 0) * 0.25^0 * (1-0.25)^10) + (choose(10, 1) * 0.25^1 * (1-0.25)^9) + (choose(10, 2) * 0.25^2 * (1-0.25)^8)
(choose(10, 0) * 0.25^0 * (1-0.25)^10) + (choose(10, 1) * 0.25^1 * (1-0.25)^9) + (choose(10, 2) * 0.25^2 * (1-0.25)^8) - 1
dbinom(x = 7, size = 10, prob = 0.25)
pbinom(q = 5, size = 10, prob = 0.25)
sum(dbinom(x = 0:5, size = 10, prob = 0.25))
factorial(0)
exp()
exp(1)
exp(1)^-0.2 * 0.2^0
exp(1)^-0.2 * 0.2^0 / factorial(0)
0.819 + 0.164
1 - ()
1 - (0.819 + 0.164)
dgeom(x = 125, prob = 0.01)
dgeom(x = 50, prob = 0.01)
pgeom(q = 50, prob = 0.01)
sum(dgeom(x = 0:50, prob = 0.01))
1/0.01
?dnbinom()
pnorm(q = 0.5)
2^16
