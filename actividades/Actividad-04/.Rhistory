color = "Zona")
data_hurtos %>%
group_by(dia, zona) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
geom_point(size = 4) +
geom_line(size = 1) +
scale_y_continuous(limits = c(0, 350)) +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
color = "Zona")
data_hurtos %>%
group_by(dia, zona) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
geom_point(size = 4) +
geom_line(size = 1) +
scale_y_continuous(limits = c(0, 350)) +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
color = "Zona")
data_hurtos %>%
group_by(dia, zona, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
facet_wrap(~departamento, scales = "free") +
geom_point() +
geom_line() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
subtitle = "Comportamiento departamental",
color = "Zona")
data_hurtos %>%
group_by(dia, zona, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
facet_wrap(~departamento, scales = "free") +
geom_point() +
geom_line() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
subtitle = "Comportamiento departamental",
color = "Zona")
data_hurtos %>%
group_by(dia, zona, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
facet_wrap(~departamento, scales = "free", ncol = 4) +
geom_point() +
geom_line() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
subtitle = "Comportamiento departamental",
color = "Zona")
data_hurtos %>%
group_by(dia, zona, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
facet_wrap(~departamento, scales = "free", ncol = 4) +
geom_point() +
geom_line() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
subtitle = "Comportamiento departamental",
color = "Zona") +
theme(legend.position = "top")
data_hurtos %>%
group_by(dia, zona, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
facet_wrap(~departamento, scales = "free", ncol = 4) +
geom_point() +
geom_line() +
scale_y_continuous(limits = c(0, 350)) +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
subtitle = "Comportamiento departamental",
color = "Zona") +
theme(legend.position = "top",
axis.text.x = element_text(angle = 45, hjust = 1))
data_hurtos %>%
group_by(dia, zona, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
facet_wrap(~departamento, scales = "free", ncol = 4) +
geom_point() +
geom_line() +
scale_y_continuous(limits = c(0, 25)) +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
subtitle = "Comportamiento departamental",
color = "Zona") +
theme(legend.position = "top",
axis.text.x = element_text(angle = 45, hjust = 1))
data_hurtos %>%
group_by(dia, zona, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
facet_wrap(~departamento, scales = "free_x", ncol = 4) +
geom_point() +
geom_line() +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
subtitle = "Comportamiento departamental",
color = "Zona") +
theme(legend.position = "top",
axis.text.x = element_text(angle = 45, hjust = 1))
data_hurtos %>%
group_by(dia, zona, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
facet_wrap(~departamento, scales = "free", ncol = 4) +
geom_point() +
geom_line() +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
subtitle = "Comportamiento departamental",
color = "Zona") +
theme(legend.position = "top",
axis.text.x = element_text(angle = 45, hjust = 1))
data_hurtos %>%
group_by(dia, zona, sexo) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = sexo, group = sexo)) +
facet_wrap(~zona, scales = "free") +
geom_point(size = 5) +
geom_line(size = 1.2)  +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y sexo",
subtitle = "Comportamiento por zonas",
color = "Sexo")
data_hurtos %>%
group_by(dia, zona, sexo) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = sexo, group = sexo)) +
facet_wrap(~zona, scales = "free") +
geom_point(size = 1) +
geom_line(size = 1.2)  +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y sexo",
subtitle = "Comportamiento por zonas",
color = "Sexo")
```{r, fig.width=9}
data_hurtos %>%
group_by(dia, zona, sexo) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = sexo, group = sexo)) +
facet_wrap(~zona, scales = "free") +
geom_point(size = 1) +
geom_line(size = 1.2)  +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y sexo",
subtitle = "Comportamiento por zonas",
color = "Sexo")
data_hurtos %>%
group_by(dia, zona, sexo) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = sexo, group = sexo)) +
facet_wrap(~zona, scales = "free") +
geom_point(size = 1) +
geom_line(size = 1.2)  +
scale_y_continuous(minor_breaks = 0) +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y sexo",
subtitle = "Comportamiento por zonas",
color = "Sexo")
data_hurtos %>%
group_by(zona, clase_de_empleado) %>%
count(name = "total") %>%
ggplot(aes(x = reorder(clase_de_empleado, total), y = total)) +
facet_wrap(~zona, scales = "free") +
geom_point(size = 2) +
coord_flip() +
labs(x = "",
y = "Total",
title = "Hurtos por clase de empleado",
subtitle = "Comportamiento por zonas")
data_hurtos %>%
group_by(zona, clase_de_empleado) %>%
count(name = "total") %>%
ggplot(aes(x = reorder(clase_de_empleado, total), y = total)) +
facet_wrap(~zona, scales = "free") +
geom_point(size = 2) +
coord_flip() +
labs(x = "",
y = "Total",
title = "Hurtos por clase de empleado",
subtitle = "Comportamiento por zonas")
data_hurtos %>%
group_by(dia, zona, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = dia, y = total, color = zona, group = zona)) +
facet_wrap(~departamento, scales = "free", ncol = 4) +
geom_point() +
geom_line() +
labs(x = "Día",
y = "Total",
title = "Hurtos por día de la semana y zona",
subtitle = "Comportamiento departamental",
color = "Zona") +
theme(legend.position = "top",
axis.text.x = element_text(angle = 45, hjust = 1))
data_hurtos %>%
group_by(dia, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = total)) +
facet_wrap(~departamento, scales = "free") +
geom_density() +
labs(x = "Total",
y = "Densidad",
title = "Distribución de hurtos por departamento",
subtitle = "Comportamiento semanal")
data_hurtos %>%
group_by(dia, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = total)) +
facet_wrap(~departamento, scales = "free") +
geom_density() +
labs(x = "Total",
y = "Densidad",
title = "Distribución de hurtos por departamento",
subtitle = "Comportamiento semanal")
data_hurtos %>%
group_by(dia, departamento) %>%
count(name = "total") %>%
ggplot(aes(x = total)) +
facet_wrap(~departamento, scales = "free", ncol = 4) +
geom_density() +
labs(x = "Total",
y = "Densidad",
title = "Distribución de hurtos por departamento",
subtitle = "Comportamiento semanal")
# Accidentalidad Motos Medellín 2015-2020
library(janitor)
library(tidyverse)
library(Hmisc)
data_motos <- read_csv("Accidentalidad_con_motos_municipio_de_Medell_n_a_o_2019.csv") %>%
clean_names() %>%
mutate(fecha_accidente = as.Date(fecha_accidente, format = "%m/%d/%Y")) %>%
mutate_if(is.character, tolower) %>%
mutate_if(is.character, capitalize) %>%
mutate_if(is.character, as.factor)
# Accidentalidad Motos Medellín 2015-2020
library(janitor)
library(tidyverse)
library(Hmisc)
data_motos <- read_csv("Accidentalidad_con_motos_municipio_de_Medell_n_a_o_2019.csv") %>%
clean_names() %>%
mutate(fecha_accidente = as.Date(fecha_accidente, format = "%m/%d/%Y")) %>%
mutate_if(is.character, tolower) %>%
mutate_if(is.character, capitalize) %>%
mutate_if(is.character, as.factor)
head(data_motos)
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(zona) %>%
count(name = "total") %>%
ggplot(aes(x = reorder(zona, total), y = total)) +
geom_col() +
coord_flip()
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(zona) %>%
count(name = "total") %>%
ggplot(aes(x = reorder(zona, total), y = total)) +
geom_col() +
coord_flip() +
labs(x = "Comuna",
y = "Total",
title = "Número de hurtos por comuna",
subtitle = "Medellín, Colombia")
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(zona) %>%
count(name = "total") %>%
ggplot(aes(x = reorder(zona, total), y = total)) +
geom_col() +
coord_flip() +
labs(x = "Comuna",
y = "Total",
title = "Número de accidentes en motocicleta por comuna",
subtitle = "Medellín, Colombia")
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(zona) %>%
count(name = "total") %>%
ggplot(aes(x = reorder(zona, total), y = total)) +
geom_col() +
coord_flip() +
labs(x = "Comuna",
y = "Total",
title = "Número de accidentes en motocicleta por comuna",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
group_by(hora_accidente) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 10))
data_motos %>%
group_by(hora_accidente) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 10))
data_motos %>%
group_by(hora_accidente) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
geom_smooth(se = T)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 10))
data_motos %>%
group_by(hora_accidente) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 10))
data_motos %>%
group_by(hora_accidente) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 10)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(hora_accidente, zona) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
facet_wrap(~zona, scales = "free") +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 5))
data_motos %>%
group_by(hora_accidente) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 10)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(hora_accidente, zona) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
facet_wrap(~zona, scales = "free") +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 5)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(hora_accidente, zona) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
facet_wrap(~zona, scales = "free") +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 5)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(hora_accidente, zona) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
facet_wrap(~zona, scales = "free") +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 3)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(hora_accidente, zona) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
facet_wrap(~zona, scales = "free", ncol = 3) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 5)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(hora_accidente, zona) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
facet_wrap(~zona, scales = "free", ncol = 3) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 5)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(hora_accidente, zona) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
facet_wrap(~zona, scales = "free", ncol = 3) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 5)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día por comuna",
subtitle = "Medellín, Colombia (2015-2019)")
# Kaggle
data_nutri = read_csv("datos_kaggle_nutrition.csv")
head(data_nutri)
data_motos %>%
filter(zona %in% paste0("Comuna ", 1:16)) %>%
group_by(zona) %>%
count(name = "total") %>%
ggplot(aes(x = reorder(zona, total), y = total)) +
geom_col() +
coord_flip() +
labs(x = "Comuna",
y = "Total",
title = "Número de accidentes en motocicleta por comuna",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
group_by(hora_accidente) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 10)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
group_by(hora_accidente) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 10)) +
scale_y_continuous(limits = c(0, 40)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
data_motos %>%
group_by(hora_accidente) %>%
count(name = "total") %>%
ggplot(aes(x = hora_accidente, y = total)) +
geom_smooth(se = FALSE)  +
scale_x_time(breaks = seq(min(data_motos$hora_accidente, na.rm = TRUE),
max(data_motos$hora_accidente, na.rm = TRUE),
length.out = 10)) +
labs(x = "Hora",
y = "Total",
title = "Accidentes en motocicleta vs hora del día",
subtitle = "Medellín, Colombia (2015-2019)")
