setwd("D:/DocumentosEdimer/Github/rproject_udea")
?kruskal.test
sessionInfo()
install.packages("moments")
edimer <- c(2, 10)
edimer > 1 & edimer < 5
edimer < 5
janitor::tabyl(iris)
janitor::tabyl(iris$Species)
?janitor::tabyl()
library(janitor)
tabyl(mtcars, cyl, gear, am)
my_cars %>% tabyl(cyl, show_na = FALSE)
my_cars <- rbind(mtcars, rep(NA, 11))
my_cars %>% tabyl(cyl, show_na = FALSE)
val <- c("hi", "med", "med", "lo")
tabyl(val)
tabyl(mtcars, cyl, gear, am)
mtcars %>% tabyl( cyl, gear, am)
install.packages("summarytools")
library(summarytools)
freq(iris$Species)
freq(mtcars$cyl, mtcars$gear)
?freq
table(mtcars$cyl, mtcars$gear)
prop.table(table(mtcars$cyl, mtcars$gear))
?xtabs()
xtabs(~ cyl + gear, mtcars)
xtabs(~ cyl + gear, mtcars)
table(mtcars$cyl, mtcars$gear)
table(mtcars$cyl, mtcars$gear, mtcars$hp)
table(mtcars$cyl, mtcars$gear, mtcars$mpg)
table(mtcars$cyl, mtcars$gear, mtcars$drat)
str(mtcars)
table(mtcars$cyl, mtcars$gear, mtcars$am)
xtabs(~ cyl + gear + am, mtcars)
freq(mtcars$gear)
15 / 32
tabyl(mtcars$gear)
table(mtcars$gear)
prop.table(table(mtcars$gear))
xtabs(~ gear, mtcars)
xtabs(~ gear + am, mtcars)
prop.table(xtabs(~ gear + am, mtcars))
prop.table(xtabs(~ gear + am + cyl, mtcars))
prop.table(xtabs(~ gear + am, mtcars))
prop.table(xtabs(~ gear + am + cyl, mtcars))
as.data.frame(prop.table(xtabs(~ gear + am + cyl, mtcars)))
library(dplyr)
as.data.frame(prop.table(xtabs(~ gear + am + cyl, mtcars)))
as.data.frame(prop.table(xtabs(~ gear + am + cyl, mtcars))) %>% arrange(Freq)
as.data.frame(prop.table(xtabs(~ gear + am + cyl, mtcars))) %>% arrange(desc(Freq))
table(mtcars$gear, mtcars$am, mtcars$cyl)
table(mtcars$gear, mtcars$am, mtcars$cyl) %>% as.data.frame()
xtabs(mtcars$cyl)
xtabs(~mtcars$cyl)
xtabs(mtcars$am~mtcars$cyl)
?xtabs()
ftable(mtcars$cyl)
ftable(mtcars$cyl, mtcars$am)
ftable(xtabs(~ mtcars$cyl + mtcars$am))
DF <- as.data.frame(UCBAdmissions)
DF
xtabs(Freq ~ Gender + Admit, DF)
summary(xtabs(Freq ~ ., DF))
head(iris)
libra
library(tidyverse)
head(iris)
iris %>% filter(Species == "Setosa")
iris %>% filter(Species == "setosa")
filter(.data = iris, Species == "setosa")
?Titanic
knitr::opts_chunk$set(echo = FALSE)
datos_titanic <- as.data.frame(Titanic)
datos_titanic
data()
ggplot2::diamonds
library(ggplot2)
library(tidyverse)
diamonds
?diamonds
diamonds %>%
group_by(cut) %>%
summarise(promedio_clarity = mean(clarity))
diamonds
diamonds %>%
group_by(cut) %>%
summarise(promedio_clarity = mean(clarity, na.rm = TRUE))
diamonds
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_clarity = mean(clarity, na.rm = TRUE),
)
diamonds
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_clarity = mean(clarity, na.rm = TRUE),
promedio_peso = mean(carat))
diamonds
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_clarity = mean(clarity, na.rm = TRUE),
promedio_peso = mean(carat),
promedio_precio = mean(price))
diamonds
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_clarity = mean(clarity, na.rm = TRUE),
promedio_peso = mean(carat),
promedio_precio = mean(price))
diamonds
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_clarity = mean(color, na.rm = TRUE),
promedio_peso = mean(carat),
promedio_precio = mean(price))
diamonds
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth, na.rm = TRUE),
promedio_peso = mean(carat),
promedio_precio = mean(price))
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
promedio_precio = mean(price))
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
promedio_precio = mean(price)) %>%
filter(promedio_peso > 1)
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
mediana_precio = mean(price)) %>%
filter(mediana_precio > 1)
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
mediana_precio = median(price)) %>%
filter(mediana_precio > 1)
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
mediana_precio = median(price)) %>%
filter(promedio_peso > 1)
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
mediana_precio = median(price),
total_diamantes = n()) %>%
filter(promedio_peso > 1)
library(tidyverse)
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
mediana_precio = median(price),
total_diamantes = n()) %>%
filter(promedio_peso > 1)
library(tidyverse)
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
mediana_precio = median(price),
total_diamantes = n()) %>%
filter(promedio_peso > 1)
diamonds %>%
Group_by(cut, Color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
mediana_precio = mean(price),
total_diamantes = N()) %>%
filter(promedio_peso > "1")
diamonds %>%
group_by(cut, color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
mediana_precio = median(price),
total_diamantes = n()) %>%
ungroup() %>%
filter(promedio_peso > 1)
diamonds %>%
Group_by(cut, Color) %>%
summarise(promedio_depth = mean(depth),
promedio_peso = mean(carat),
mediana_precio = mean(price),
total_diamantes = N()) %>%
filter(promedio_peso > "1")
tinytex::install_tinytex()
?dnbinom
library(DT)
library(raster)
getData(name = "ISO3") %>%
datatable(rownames = FALSE)
colombia_pais <- getData(name = "GADM", country = "COL", level = 0)
colombia_dept <- getData(name = "GADM", country = "COL", level = 1)
colombia_muni <- getData(name = "GADM", country = "COL", level = 2)
colombia_dept <- getData(name = "GADM", country = "COL", level = 1)
# Código para resumir datos de evaluaciones agropecuarias
library(tidyverse)
library(janitor)
datos <-
read_csv("data/Evaluaciones_Agropecuarias_Municipales___EVA._2019_-_2020.csv") %>%
clean_names() %>%
filter(cultivo == "Aguacate") %>%
filter(ano == 2020) %>%
group_by(departamento) %>%
summarise(total_area_sembrada = sum(area_sembrada_ha, na.rm = TRUE),
total_area_cosechada = sum(area_cosechada_ha, na.rm = TRUE),
total_produccion = sum(produccion_t, na.rm = TRUE),
promedio_rto = mean(rendimiento_t_ha, na.rm = TRUE)) %>%
ungroup()
datos
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
datos_mango <- read_csv("https://www.datos.gov.co/api/views/p5fp-pay3/rows.csv?accessType=DOWNLOAD")
datos_mango
library(janitor)
datos_mango <- read_csv("https://www.datos.gov.co/api/views/p5fp-pay3/rows.csv?accessType=DOWNLOAD") %>%
clean_names()
datos_mango
filter(cultivo == "Mango")
datos_mango <- read_csv("https://www.datos.gov.co/api/views/p5fp-pay3/rows.csv?accessType=DOWNLOAD") %>%
clean_names() %>%
filter(cultivo == "Mango")
datos_mango
datos_mango %>%
count(ano)
datos_mango
datos_mango <- read_csv("https://www.datos.gov.co/api/views/p5fp-pay3/rows.csv?accessType=DOWNLOAD") %>%
clean_names() %>%
filter(cultivo == "Mango") %>%
rename(year = ano)
datos_mango
30.84167 - 25.35
30.84167 - 31.03
library(tidyverse)
library(readxl)
datos <- read_excel("temas/data/fertilidad.xlsx")
View(datos)
levels(as.factor(datos$tipo_suelo))
levels(as.factor(datos$tratamiento))
levels(as.factor(datos$tipo_suelo))
datos <- read_excel("temas/data/fertilidad.xlsx") %>%
mutate(tratamiento = factor(tratamiento,
levels = c("Control", "CaNO32", "CONH22",
"NaNO3", "NH42SO4", "NH4NO3")),
nombre = factor(nombre,
levels = c(  "Sin nitrógeno", "Nitrato de calcio",
"Urea", "Nitrato de sodio",
"Sulfato de amonio", "Nitrato de amonio")))
levels(as.factor(datos$tratamiento))
levels(as.factor(datos$nombre))
modelo1 <- aov(produccion ~ nombre + tipo_suelo,
data = datos)
summary(modelo1)
summary(modelo1)
model.tables(modelo1, type = "effects", se = TRUE)
model.tables(modelo1, type = "means", se = TRUE)
model.tables(modelo1, type = "means", se = TRUE)
PruebaDunnet <- glht(modelo1, linfct = mcp(nombre = "Dunnett"))
library(multcomp)
PruebaDunnet <- glht(modelo1, linfct = mcp(nombre = "Dunnett"))
summary(PruebaDunnet)
summary(PruebaDunnet)
casos <- paste("Caso", 1:5)
casos
sample(casos)
sample(casos)
sample(casos)
sample(casos)
sample(casos)
sample(casos)
sample(casos)
sample(casos, size = 5)
sample(casos, size = 5)
